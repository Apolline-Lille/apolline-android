sudo: required
notifications:
  email: false
dist: trusty
group: edge
services:
  - docker
language: android
jdk: oraclejdk8
before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -rf $HOME/.gradle/caches/*/plugin-resolution/
cache:
  directories:
  - "$HOME/.gradle/caches/"
  - "$HOME/.gradle/wrapper/"
  - "$HOME/.android/build-cache"
before_install:
  - mkdir "$ANDROID_HOME/licenses" || true
  - echo -e "\n8933bad161af4178b1185d1a37fbf41ea5269c55" > "$ANDROID_HOME/licenses/android-sdk-license"
  - echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > "$ANDROID_HOME/licenses/android-sdk-preview-license"
  - mv ${TRAVIS_BUILD_DIR}/google-services.json ${TRAVIS_BUILD_DIR}/app/google-services.json
  - cp local.properties.ci local.properties
  - ls -all
  - source scripts/writeEnvVariables.sh && copyEnvVarsToManifest && copyEnvVarsToSigningProperties && copyEnvVarsToFastlaneConfiguration
  - docker pull influxdb
  - docker run --name=influxdb -d -p 127.0.0.1:8086:8086 influxdb
  - docker ps -a
  - chmod +x ./gradlew
  - yes | sdkmanager "platforms;android-27"
env:
  global:
  - ANDROID_API_LEVEL=27
  - ANDROID_BUILD_TOOLS=27.0.3
  - ADB_INSTALL_TIMEOUT=5
android:
  components:
  - tools
  - platform-tools
  - tools
  - android-$ANDROID_API_LEVEL
  - build-tools-$ANDROID_BUILD_TOOLS
  licenses:
    - android-sdk-license-.+
    - '.+'
script:
  - android list target
  - curl -i -XPOST http://127.0.0.1:8086/query --data-urlencode "q=CREATE DATABASE test"
  - ./gradlew clean test build
before_deploy:
  - cd ${TRAVIS_BUILD_DIR}/app/build/outputs/apk/release && ls --all
  - export APK_PATH_TEMP="$(pwd)/Apolline*.apk" && export APK_PATH=$(echo ${APK_PATH_TEMP}) && echo $APK_PATH
  - cd ${TRAVIS_BUILD_DIR}
  - bundle install && bundle update fastlane
  - bundle exec fastlane beta
  - bundle exec fastlane deploy
deploy:
  provider: releases
  skip_cleanup: true
  file: ${APK_PATH}
  api_key: $GH_TOKEN
  on:
    repo: Apolline-Lille/apolline-android
    branch: master
    tags: true
